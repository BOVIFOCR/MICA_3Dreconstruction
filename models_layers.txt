self.nfc.flameModel.named_parameters()
    regressor.network.0.weight <class 'torch.nn.parameter.Parameter'> torch.Size([300, 512])
    regressor.network.0.bias <class 'torch.nn.parameter.Parameter'> torch.Size([300])
    regressor.network.1.weight <class 'torch.nn.parameter.Parameter'> torch.Size([300, 300])
    regressor.network.1.bias <class 'torch.nn.parameter.Parameter'> torch.Size([300])
    regressor.network.2.weight <class 'torch.nn.parameter.Parameter'> torch.Size([300, 300])
    regressor.network.2.bias <class 'torch.nn.parameter.Parameter'> torch.Size([300])
    regressor.network.3.weight <class 'torch.nn.parameter.Parameter'> torch.Size([300, 300])
    regressor.network.3.bias <class 'torch.nn.parameter.Parameter'> torch.Size([300])
    regressor.output.weight <class 'torch.nn.parameter.Parameter'> torch.Size([300, 300])
    regressor.output.bias <class 'torch.nn.parameter.Parameter'> torch.Size([300])
    generator.eye_pose <class 'torch.nn.parameter.Parameter'> torch.Size([1, 6])
    generator.neck_pose <class 'torch.nn.parameter.Parameter'> torch.Size([1, 3])
-------------
self.nfc.arcface.named_parameters()
    conv1.weight <class 'torch.nn.parameter.Parameter'> torch.Size([64, 3, 3, 3])
    bn1.weight <class 'torch.nn.parameter.Parameter'> torch.Size([64])
    bn1.bias <class 'torch.nn.parameter.Parameter'> torch.Size([64])
    prelu.weight <class 'torch.nn.parameter.Parameter'> torch.Size([64])
    layer1.0.bn1.weight <class 'torch.nn.parameter.Parameter'> torch.Size([64])
    layer1.0.bn1.bias <class 'torch.nn.parameter.Parameter'> torch.Size([64])
    layer1.0.conv1.weight <class 'torch.nn.parameter.Parameter'> torch.Size([64, 64, 3, 3])
    layer1.0.bn2.weight <class 'torch.nn.parameter.Parameter'> torch.Size([64])
    layer1.0.bn2.bias <class 'torch.nn.parameter.Parameter'> torch.Size([64])
    layer1.0.prelu.weight <class 'torch.nn.parameter.Parameter'> torch.Size([64])
    layer1.0.conv2.weight <class 'torch.nn.parameter.Parameter'> torch.Size([64, 64, 3, 3])
    layer1.0.bn3.weight <class 'torch.nn.parameter.Parameter'> torch.Size([64])
    layer1.0.bn3.bias <class 'torch.nn.parameter.Parameter'> torch.Size([64])
    layer1.0.downsample.0.weight <class 'torch.nn.parameter.Parameter'> torch.Size([64, 64, 1, 1])
    layer1.0.downsample.1.weight <class 'torch.nn.parameter.Parameter'> torch.Size([64])
    layer1.0.downsample.1.bias <class 'torch.nn.parameter.Parameter'> torch.Size([64])
    layer1.1.bn1.weight <class 'torch.nn.parameter.Parameter'> torch.Size([64])
    layer1.1.bn1.bias <class 'torch.nn.parameter.Parameter'> torch.Size([64])
    layer1.1.conv1.weight <class 'torch.nn.parameter.Parameter'> torch.Size([64, 64, 3, 3])
    layer1.1.bn2.weight <class 'torch.nn.parameter.Parameter'> torch.Size([64])
    layer1.1.bn2.bias <class 'torch.nn.parameter.Parameter'> torch.Size([64])
    layer1.1.prelu.weight <class 'torch.nn.parameter.Parameter'> torch.Size([64])
    layer1.1.conv2.weight <class 'torch.nn.parameter.Parameter'> torch.Size([64, 64, 3, 3])
    layer1.1.bn3.weight <class 'torch.nn.parameter.Parameter'> torch.Size([64])
    layer1.1.bn3.bias <class 'torch.nn.parameter.Parameter'> torch.Size([64])
    layer1.2.bn1.weight <class 'torch.nn.parameter.Parameter'> torch.Size([64])
    layer1.2.bn1.bias <class 'torch.nn.parameter.Parameter'> torch.Size([64])
    layer1.2.conv1.weight <class 'torch.nn.parameter.Parameter'> torch.Size([64, 64, 3, 3])
    layer1.2.bn2.weight <class 'torch.nn.parameter.Parameter'> torch.Size([64])
    layer1.2.bn2.bias <class 'torch.nn.parameter.Parameter'> torch.Size([64])
    layer1.2.prelu.weight <class 'torch.nn.parameter.Parameter'> torch.Size([64])
    layer1.2.conv2.weight <class 'torch.nn.parameter.Parameter'> torch.Size([64, 64, 3, 3])
    layer1.2.bn3.weight <class 'torch.nn.parameter.Parameter'> torch.Size([64])
    layer1.2.bn3.bias <class 'torch.nn.parameter.Parameter'> torch.Size([64])
    layer2.0.bn1.weight <class 'torch.nn.parameter.Parameter'> torch.Size([64])
    layer2.0.bn1.bias <class 'torch.nn.parameter.Parameter'> torch.Size([64])
    layer2.0.conv1.weight <class 'torch.nn.parameter.Parameter'> torch.Size([128, 64, 3, 3])
    layer2.0.bn2.weight <class 'torch.nn.parameter.Parameter'> torch.Size([128])
    layer2.0.bn2.bias <class 'torch.nn.parameter.Parameter'> torch.Size([128])
    layer2.0.prelu.weight <class 'torch.nn.parameter.Parameter'> torch.Size([128])
    layer2.0.conv2.weight <class 'torch.nn.parameter.Parameter'> torch.Size([128, 128, 3, 3])
    layer2.0.bn3.weight <class 'torch.nn.parameter.Parameter'> torch.Size([128])
    layer2.0.bn3.bias <class 'torch.nn.parameter.Parameter'> torch.Size([128])
    layer2.0.downsample.0.weight <class 'torch.nn.parameter.Parameter'> torch.Size([128, 64, 1, 1])
    layer2.0.downsample.1.weight <class 'torch.nn.parameter.Parameter'> torch.Size([128])
    layer2.0.downsample.1.bias <class 'torch.nn.parameter.Parameter'> torch.Size([128])
    layer2.1.bn1.weight <class 'torch.nn.parameter.Parameter'> torch.Size([128])
    layer2.1.bn1.bias <class 'torch.nn.parameter.Parameter'> torch.Size([128])
    layer2.1.conv1.weight <class 'torch.nn.parameter.Parameter'> torch.Size([128, 128, 3, 3])
    layer2.1.bn2.weight <class 'torch.nn.parameter.Parameter'> torch.Size([128])
    layer2.1.bn2.bias <class 'torch.nn.parameter.Parameter'> torch.Size([128])
    layer2.1.prelu.weight <class 'torch.nn.parameter.Parameter'> torch.Size([128])
    layer2.1.conv2.weight <class 'torch.nn.parameter.Parameter'> torch.Size([128, 128, 3, 3])
    layer2.1.bn3.weight <class 'torch.nn.parameter.Parameter'> torch.Size([128])
    layer2.1.bn3.bias <class 'torch.nn.parameter.Parameter'> torch.Size([128])
    layer2.2.bn1.weight <class 'torch.nn.parameter.Parameter'> torch.Size([128])
    layer2.2.bn1.bias <class 'torch.nn.parameter.Parameter'> torch.Size([128])
    layer2.2.conv1.weight <class 'torch.nn.parameter.Parameter'> torch.Size([128, 128, 3, 3])
    layer2.2.bn2.weight <class 'torch.nn.parameter.Parameter'> torch.Size([128])
    layer2.2.bn2.bias <class 'torch.nn.parameter.Parameter'> torch.Size([128])
    layer2.2.prelu.weight <class 'torch.nn.parameter.Parameter'> torch.Size([128])
    layer2.2.conv2.weight <class 'torch.nn.parameter.Parameter'> torch.Size([128, 128, 3, 3])
    layer2.2.bn3.weight <class 'torch.nn.parameter.Parameter'> torch.Size([128])
    layer2.2.bn3.bias <class 'torch.nn.parameter.Parameter'> torch.Size([128])
    layer2.3.bn1.weight <class 'torch.nn.parameter.Parameter'> torch.Size([128])
    layer2.3.bn1.bias <class 'torch.nn.parameter.Parameter'> torch.Size([128])
    layer2.3.conv1.weight <class 'torch.nn.parameter.Parameter'> torch.Size([128, 128, 3, 3])
    layer2.3.bn2.weight <class 'torch.nn.parameter.Parameter'> torch.Size([128])
    layer2.3.bn2.bias <class 'torch.nn.parameter.Parameter'> torch.Size([128])
    layer2.3.prelu.weight <class 'torch.nn.parameter.Parameter'> torch.Size([128])
    layer2.3.conv2.weight <class 'torch.nn.parameter.Parameter'> torch.Size([128, 128, 3, 3])
    layer2.3.bn3.weight <class 'torch.nn.parameter.Parameter'> torch.Size([128])
    layer2.3.bn3.bias <class 'torch.nn.parameter.Parameter'> torch.Size([128])
    layer2.4.bn1.weight <class 'torch.nn.parameter.Parameter'> torch.Size([128])
    layer2.4.bn1.bias <class 'torch.nn.parameter.Parameter'> torch.Size([128])
    layer2.4.conv1.weight <class 'torch.nn.parameter.Parameter'> torch.Size([128, 128, 3, 3])
    layer2.4.bn2.weight <class 'torch.nn.parameter.Parameter'> torch.Size([128])
    layer2.4.bn2.bias <class 'torch.nn.parameter.Parameter'> torch.Size([128])
    layer2.4.prelu.weight <class 'torch.nn.parameter.Parameter'> torch.Size([128])
    layer2.4.conv2.weight <class 'torch.nn.parameter.Parameter'> torch.Size([128, 128, 3, 3])
    layer2.4.bn3.weight <class 'torch.nn.parameter.Parameter'> torch.Size([128])
    layer2.4.bn3.bias <class 'torch.nn.parameter.Parameter'> torch.Size([128])
    layer2.5.bn1.weight <class 'torch.nn.parameter.Parameter'> torch.Size([128])
    layer2.5.bn1.bias <class 'torch.nn.parameter.Parameter'> torch.Size([128])
    layer2.5.conv1.weight <class 'torch.nn.parameter.Parameter'> torch.Size([128, 128, 3, 3])
    layer2.5.bn2.weight <class 'torch.nn.parameter.Parameter'> torch.Size([128])
    layer2.5.bn2.bias <class 'torch.nn.parameter.Parameter'> torch.Size([128])
    layer2.5.prelu.weight <class 'torch.nn.parameter.Parameter'> torch.Size([128])
    layer2.5.conv2.weight <class 'torch.nn.parameter.Parameter'> torch.Size([128, 128, 3, 3])
    layer2.5.bn3.weight <class 'torch.nn.parameter.Parameter'> torch.Size([128])
    layer2.5.bn3.bias <class 'torch.nn.parameter.Parameter'> torch.Size([128])
    layer2.6.bn1.weight <class 'torch.nn.parameter.Parameter'> torch.Size([128])
    layer2.6.bn1.bias <class 'torch.nn.parameter.Parameter'> torch.Size([128])
    layer2.6.conv1.weight <class 'torch.nn.parameter.Parameter'> torch.Size([128, 128, 3, 3])
    layer2.6.bn2.weight <class 'torch.nn.parameter.Parameter'> torch.Size([128])
    layer2.6.bn2.bias <class 'torch.nn.parameter.Parameter'> torch.Size([128])
    layer2.6.prelu.weight <class 'torch.nn.parameter.Parameter'> torch.Size([128])
    layer2.6.conv2.weight <class 'torch.nn.parameter.Parameter'> torch.Size([128, 128, 3, 3])
    layer2.6.bn3.weight <class 'torch.nn.parameter.Parameter'> torch.Size([128])
    layer2.6.bn3.bias <class 'torch.nn.parameter.Parameter'> torch.Size([128])
    layer2.7.bn1.weight <class 'torch.nn.parameter.Parameter'> torch.Size([128])
    layer2.7.bn1.bias <class 'torch.nn.parameter.Parameter'> torch.Size([128])
    layer2.7.conv1.weight <class 'torch.nn.parameter.Parameter'> torch.Size([128, 128, 3, 3])
    layer2.7.bn2.weight <class 'torch.nn.parameter.Parameter'> torch.Size([128])
    layer2.7.bn2.bias <class 'torch.nn.parameter.Parameter'> torch.Size([128])
    layer2.7.prelu.weight <class 'torch.nn.parameter.Parameter'> torch.Size([128])
    layer2.7.conv2.weight <class 'torch.nn.parameter.Parameter'> torch.Size([128, 128, 3, 3])
    layer2.7.bn3.weight <class 'torch.nn.parameter.Parameter'> torch.Size([128])
    layer2.7.bn3.bias <class 'torch.nn.parameter.Parameter'> torch.Size([128])
    layer2.8.bn1.weight <class 'torch.nn.parameter.Parameter'> torch.Size([128])
    layer2.8.bn1.bias <class 'torch.nn.parameter.Parameter'> torch.Size([128])
    layer2.8.conv1.weight <class 'torch.nn.parameter.Parameter'> torch.Size([128, 128, 3, 3])
    layer2.8.bn2.weight <class 'torch.nn.parameter.Parameter'> torch.Size([128])
    layer2.8.bn2.bias <class 'torch.nn.parameter.Parameter'> torch.Size([128])
    layer2.8.prelu.weight <class 'torch.nn.parameter.Parameter'> torch.Size([128])
    layer2.8.conv2.weight <class 'torch.nn.parameter.Parameter'> torch.Size([128, 128, 3, 3])
    layer2.8.bn3.weight <class 'torch.nn.parameter.Parameter'> torch.Size([128])
    layer2.8.bn3.bias <class 'torch.nn.parameter.Parameter'> torch.Size([128])
    layer2.9.bn1.weight <class 'torch.nn.parameter.Parameter'> torch.Size([128])
    layer2.9.bn1.bias <class 'torch.nn.parameter.Parameter'> torch.Size([128])
    layer2.9.conv1.weight <class 'torch.nn.parameter.Parameter'> torch.Size([128, 128, 3, 3])
    layer2.9.bn2.weight <class 'torch.nn.parameter.Parameter'> torch.Size([128])
    layer2.9.bn2.bias <class 'torch.nn.parameter.Parameter'> torch.Size([128])
    layer2.9.prelu.weight <class 'torch.nn.parameter.Parameter'> torch.Size([128])
    layer2.9.conv2.weight <class 'torch.nn.parameter.Parameter'> torch.Size([128, 128, 3, 3])
    layer2.9.bn3.weight <class 'torch.nn.parameter.Parameter'> torch.Size([128])
    layer2.9.bn3.bias <class 'torch.nn.parameter.Parameter'> torch.Size([128])
    layer2.10.bn1.weight <class 'torch.nn.parameter.Parameter'> torch.Size([128])
    layer2.10.bn1.bias <class 'torch.nn.parameter.Parameter'> torch.Size([128])
    layer2.10.conv1.weight <class 'torch.nn.parameter.Parameter'> torch.Size([128, 128, 3, 3])
    layer2.10.bn2.weight <class 'torch.nn.parameter.Parameter'> torch.Size([128])
    layer2.10.bn2.bias <class 'torch.nn.parameter.Parameter'> torch.Size([128])
    layer2.10.prelu.weight <class 'torch.nn.parameter.Parameter'> torch.Size([128])
    layer2.10.conv2.weight <class 'torch.nn.parameter.Parameter'> torch.Size([128, 128, 3, 3])
    layer2.10.bn3.weight <class 'torch.nn.parameter.Parameter'> torch.Size([128])
    layer2.10.bn3.bias <class 'torch.nn.parameter.Parameter'> torch.Size([128])
    layer2.11.bn1.weight <class 'torch.nn.parameter.Parameter'> torch.Size([128])
    layer2.11.bn1.bias <class 'torch.nn.parameter.Parameter'> torch.Size([128])
    layer2.11.conv1.weight <class 'torch.nn.parameter.Parameter'> torch.Size([128, 128, 3, 3])
    layer2.11.bn2.weight <class 'torch.nn.parameter.Parameter'> torch.Size([128])
    layer2.11.bn2.bias <class 'torch.nn.parameter.Parameter'> torch.Size([128])
    layer2.11.prelu.weight <class 'torch.nn.parameter.Parameter'> torch.Size([128])
    layer2.11.conv2.weight <class 'torch.nn.parameter.Parameter'> torch.Size([128, 128, 3, 3])
    layer2.11.bn3.weight <class 'torch.nn.parameter.Parameter'> torch.Size([128])
    layer2.11.bn3.bias <class 'torch.nn.parameter.Parameter'> torch.Size([128])
    layer2.12.bn1.weight <class 'torch.nn.parameter.Parameter'> torch.Size([128])
    layer2.12.bn1.bias <class 'torch.nn.parameter.Parameter'> torch.Size([128])
    layer2.12.conv1.weight <class 'torch.nn.parameter.Parameter'> torch.Size([128, 128, 3, 3])
    layer2.12.bn2.weight <class 'torch.nn.parameter.Parameter'> torch.Size([128])
    layer2.12.bn2.bias <class 'torch.nn.parameter.Parameter'> torch.Size([128])
    layer2.12.prelu.weight <class 'torch.nn.parameter.Parameter'> torch.Size([128])
    layer2.12.conv2.weight <class 'torch.nn.parameter.Parameter'> torch.Size([128, 128, 3, 3])
    layer2.12.bn3.weight <class 'torch.nn.parameter.Parameter'> torch.Size([128])
    layer2.12.bn3.bias <class 'torch.nn.parameter.Parameter'> torch.Size([128])
    layer3.0.bn1.weight <class 'torch.nn.parameter.Parameter'> torch.Size([128])
    layer3.0.bn1.bias <class 'torch.nn.parameter.Parameter'> torch.Size([128])
    layer3.0.conv1.weight <class 'torch.nn.parameter.Parameter'> torch.Size([256, 128, 3, 3])
    layer3.0.bn2.weight <class 'torch.nn.parameter.Parameter'> torch.Size([256])
    layer3.0.bn2.bias <class 'torch.nn.parameter.Parameter'> torch.Size([256])
    layer3.0.prelu.weight <class 'torch.nn.parameter.Parameter'> torch.Size([256])
    layer3.0.conv2.weight <class 'torch.nn.parameter.Parameter'> torch.Size([256, 256, 3, 3])
    layer3.0.bn3.weight <class 'torch.nn.parameter.Parameter'> torch.Size([256])
    layer3.0.bn3.bias <class 'torch.nn.parameter.Parameter'> torch.Size([256])
    layer3.0.downsample.0.weight <class 'torch.nn.parameter.Parameter'> torch.Size([256, 128, 1, 1])
    layer3.0.downsample.1.weight <class 'torch.nn.parameter.Parameter'> torch.Size([256])
    layer3.0.downsample.1.bias <class 'torch.nn.parameter.Parameter'> torch.Size([256])
    layer3.1.bn1.weight <class 'torch.nn.parameter.Parameter'> torch.Size([256])
    layer3.1.bn1.bias <class 'torch.nn.parameter.Parameter'> torch.Size([256])
    layer3.1.conv1.weight <class 'torch.nn.parameter.Parameter'> torch.Size([256, 256, 3, 3])
    layer3.1.bn2.weight <class 'torch.nn.parameter.Parameter'> torch.Size([256])
    layer3.1.bn2.bias <class 'torch.nn.parameter.Parameter'> torch.Size([256])
    layer3.1.prelu.weight <class 'torch.nn.parameter.Parameter'> torch.Size([256])
    layer3.1.conv2.weight <class 'torch.nn.parameter.Parameter'> torch.Size([256, 256, 3, 3])
    layer3.1.bn3.weight <class 'torch.nn.parameter.Parameter'> torch.Size([256])
    layer3.1.bn3.bias <class 'torch.nn.parameter.Parameter'> torch.Size([256])
    layer3.2.bn1.weight <class 'torch.nn.parameter.Parameter'> torch.Size([256])
    layer3.2.bn1.bias <class 'torch.nn.parameter.Parameter'> torch.Size([256])
    layer3.2.conv1.weight <class 'torch.nn.parameter.Parameter'> torch.Size([256, 256, 3, 3])
    layer3.2.bn2.weight <class 'torch.nn.parameter.Parameter'> torch.Size([256])
    layer3.2.bn2.bias <class 'torch.nn.parameter.Parameter'> torch.Size([256])
    layer3.2.prelu.weight <class 'torch.nn.parameter.Parameter'> torch.Size([256])
    layer3.2.conv2.weight <class 'torch.nn.parameter.Parameter'> torch.Size([256, 256, 3, 3])
    layer3.2.bn3.weight <class 'torch.nn.parameter.Parameter'> torch.Size([256])
    layer3.2.bn3.bias <class 'torch.nn.parameter.Parameter'> torch.Size([256])
    layer3.3.bn1.weight <class 'torch.nn.parameter.Parameter'> torch.Size([256])
    layer3.3.bn1.bias <class 'torch.nn.parameter.Parameter'> torch.Size([256])
    layer3.3.conv1.weight <class 'torch.nn.parameter.Parameter'> torch.Size([256, 256, 3, 3])
    layer3.3.bn2.weight <class 'torch.nn.parameter.Parameter'> torch.Size([256])
    layer3.3.bn2.bias <class 'torch.nn.parameter.Parameter'> torch.Size([256])
    layer3.3.prelu.weight <class 'torch.nn.parameter.Parameter'> torch.Size([256])
    layer3.3.conv2.weight <class 'torch.nn.parameter.Parameter'> torch.Size([256, 256, 3, 3])
    layer3.3.bn3.weight <class 'torch.nn.parameter.Parameter'> torch.Size([256])
    layer3.3.bn3.bias <class 'torch.nn.parameter.Parameter'> torch.Size([256])
    layer3.4.bn1.weight <class 'torch.nn.parameter.Parameter'> torch.Size([256])
    layer3.4.bn1.bias <class 'torch.nn.parameter.Parameter'> torch.Size([256])
    layer3.4.conv1.weight <class 'torch.nn.parameter.Parameter'> torch.Size([256, 256, 3, 3])
    layer3.4.bn2.weight <class 'torch.nn.parameter.Parameter'> torch.Size([256])
    layer3.4.bn2.bias <class 'torch.nn.parameter.Parameter'> torch.Size([256])
    layer3.4.prelu.weight <class 'torch.nn.parameter.Parameter'> torch.Size([256])
    layer3.4.conv2.weight <class 'torch.nn.parameter.Parameter'> torch.Size([256, 256, 3, 3])
    layer3.4.bn3.weight <class 'torch.nn.parameter.Parameter'> torch.Size([256])
    layer3.4.bn3.bias <class 'torch.nn.parameter.Parameter'> torch.Size([256])
    layer3.5.bn1.weight <class 'torch.nn.parameter.Parameter'> torch.Size([256])
    layer3.5.bn1.bias <class 'torch.nn.parameter.Parameter'> torch.Size([256])
    layer3.5.conv1.weight <class 'torch.nn.parameter.Parameter'> torch.Size([256, 256, 3, 3])
    layer3.5.bn2.weight <class 'torch.nn.parameter.Parameter'> torch.Size([256])
    layer3.5.bn2.bias <class 'torch.nn.parameter.Parameter'> torch.Size([256])
    layer3.5.prelu.weight <class 'torch.nn.parameter.Parameter'> torch.Size([256])
    layer3.5.conv2.weight <class 'torch.nn.parameter.Parameter'> torch.Size([256, 256, 3, 3])
    layer3.5.bn3.weight <class 'torch.nn.parameter.Parameter'> torch.Size([256])
    layer3.5.bn3.bias <class 'torch.nn.parameter.Parameter'> torch.Size([256])
    layer3.6.bn1.weight <class 'torch.nn.parameter.Parameter'> torch.Size([256])
    layer3.6.bn1.bias <class 'torch.nn.parameter.Parameter'> torch.Size([256])
    layer3.6.conv1.weight <class 'torch.nn.parameter.Parameter'> torch.Size([256, 256, 3, 3])
    layer3.6.bn2.weight <class 'torch.nn.parameter.Parameter'> torch.Size([256])
    layer3.6.bn2.bias <class 'torch.nn.parameter.Parameter'> torch.Size([256])
    layer3.6.prelu.weight <class 'torch.nn.parameter.Parameter'> torch.Size([256])
    layer3.6.conv2.weight <class 'torch.nn.parameter.Parameter'> torch.Size([256, 256, 3, 3])
    layer3.6.bn3.weight <class 'torch.nn.parameter.Parameter'> torch.Size([256])
    layer3.6.bn3.bias <class 'torch.nn.parameter.Parameter'> torch.Size([256])
    layer3.7.bn1.weight <class 'torch.nn.parameter.Parameter'> torch.Size([256])
    layer3.7.bn1.bias <class 'torch.nn.parameter.Parameter'> torch.Size([256])
    layer3.7.conv1.weight <class 'torch.nn.parameter.Parameter'> torch.Size([256, 256, 3, 3])
    layer3.7.bn2.weight <class 'torch.nn.parameter.Parameter'> torch.Size([256])
    layer3.7.bn2.bias <class 'torch.nn.parameter.Parameter'> torch.Size([256])
    layer3.7.prelu.weight <class 'torch.nn.parameter.Parameter'> torch.Size([256])
    layer3.7.conv2.weight <class 'torch.nn.parameter.Parameter'> torch.Size([256, 256, 3, 3])
    layer3.7.bn3.weight <class 'torch.nn.parameter.Parameter'> torch.Size([256])
    layer3.7.bn3.bias <class 'torch.nn.parameter.Parameter'> torch.Size([256])
    layer3.8.bn1.weight <class 'torch.nn.parameter.Parameter'> torch.Size([256])
    layer3.8.bn1.bias <class 'torch.nn.parameter.Parameter'> torch.Size([256])
    layer3.8.conv1.weight <class 'torch.nn.parameter.Parameter'> torch.Size([256, 256, 3, 3])
    layer3.8.bn2.weight <class 'torch.nn.parameter.Parameter'> torch.Size([256])
    layer3.8.bn2.bias <class 'torch.nn.parameter.Parameter'> torch.Size([256])
    layer3.8.prelu.weight <class 'torch.nn.parameter.Parameter'> torch.Size([256])
    layer3.8.conv2.weight <class 'torch.nn.parameter.Parameter'> torch.Size([256, 256, 3, 3])
    layer3.8.bn3.weight <class 'torch.nn.parameter.Parameter'> torch.Size([256])
    layer3.8.bn3.bias <class 'torch.nn.parameter.Parameter'> torch.Size([256])
    layer3.9.bn1.weight <class 'torch.nn.parameter.Parameter'> torch.Size([256])
    layer3.9.bn1.bias <class 'torch.nn.parameter.Parameter'> torch.Size([256])
    layer3.9.conv1.weight <class 'torch.nn.parameter.Parameter'> torch.Size([256, 256, 3, 3])
    layer3.9.bn2.weight <class 'torch.nn.parameter.Parameter'> torch.Size([256])
    layer3.9.bn2.bias <class 'torch.nn.parameter.Parameter'> torch.Size([256])
    layer3.9.prelu.weight <class 'torch.nn.parameter.Parameter'> torch.Size([256])
    layer3.9.conv2.weight <class 'torch.nn.parameter.Parameter'> torch.Size([256, 256, 3, 3])
    layer3.9.bn3.weight <class 'torch.nn.parameter.Parameter'> torch.Size([256])
    layer3.9.bn3.bias <class 'torch.nn.parameter.Parameter'> torch.Size([256])
    layer3.10.bn1.weight <class 'torch.nn.parameter.Parameter'> torch.Size([256])
    layer3.10.bn1.bias <class 'torch.nn.parameter.Parameter'> torch.Size([256])
    layer3.10.conv1.weight <class 'torch.nn.parameter.Parameter'> torch.Size([256, 256, 3, 3])
    layer3.10.bn2.weight <class 'torch.nn.parameter.Parameter'> torch.Size([256])
    layer3.10.bn2.bias <class 'torch.nn.parameter.Parameter'> torch.Size([256])
    layer3.10.prelu.weight <class 'torch.nn.parameter.Parameter'> torch.Size([256])
    layer3.10.conv2.weight <class 'torch.nn.parameter.Parameter'> torch.Size([256, 256, 3, 3])
    layer3.10.bn3.weight <class 'torch.nn.parameter.Parameter'> torch.Size([256])
    layer3.10.bn3.bias <class 'torch.nn.parameter.Parameter'> torch.Size([256])
    layer3.11.bn1.weight <class 'torch.nn.parameter.Parameter'> torch.Size([256])
    layer3.11.bn1.bias <class 'torch.nn.parameter.Parameter'> torch.Size([256])
    layer3.11.conv1.weight <class 'torch.nn.parameter.Parameter'> torch.Size([256, 256, 3, 3])
    layer3.11.bn2.weight <class 'torch.nn.parameter.Parameter'> torch.Size([256])
    layer3.11.bn2.bias <class 'torch.nn.parameter.Parameter'> torch.Size([256])
    layer3.11.prelu.weight <class 'torch.nn.parameter.Parameter'> torch.Size([256])
    layer3.11.conv2.weight <class 'torch.nn.parameter.Parameter'> torch.Size([256, 256, 3, 3])
    layer3.11.bn3.weight <class 'torch.nn.parameter.Parameter'> torch.Size([256])
    layer3.11.bn3.bias <class 'torch.nn.parameter.Parameter'> torch.Size([256])
    layer3.12.bn1.weight <class 'torch.nn.parameter.Parameter'> torch.Size([256])
    layer3.12.bn1.bias <class 'torch.nn.parameter.Parameter'> torch.Size([256])
    layer3.12.conv1.weight <class 'torch.nn.parameter.Parameter'> torch.Size([256, 256, 3, 3])
    layer3.12.bn2.weight <class 'torch.nn.parameter.Parameter'> torch.Size([256])
    layer3.12.bn2.bias <class 'torch.nn.parameter.Parameter'> torch.Size([256])
    layer3.12.prelu.weight <class 'torch.nn.parameter.Parameter'> torch.Size([256])
    layer3.12.conv2.weight <class 'torch.nn.parameter.Parameter'> torch.Size([256, 256, 3, 3])
    layer3.12.bn3.weight <class 'torch.nn.parameter.Parameter'> torch.Size([256])
    layer3.12.bn3.bias <class 'torch.nn.parameter.Parameter'> torch.Size([256])
    layer3.13.bn1.weight <class 'torch.nn.parameter.Parameter'> torch.Size([256])
    layer3.13.bn1.bias <class 'torch.nn.parameter.Parameter'> torch.Size([256])
    layer3.13.conv1.weight <class 'torch.nn.parameter.Parameter'> torch.Size([256, 256, 3, 3])
    layer3.13.bn2.weight <class 'torch.nn.parameter.Parameter'> torch.Size([256])
    layer3.13.bn2.bias <class 'torch.nn.parameter.Parameter'> torch.Size([256])
    layer3.13.prelu.weight <class 'torch.nn.parameter.Parameter'> torch.Size([256])
    layer3.13.conv2.weight <class 'torch.nn.parameter.Parameter'> torch.Size([256, 256, 3, 3])
    layer3.13.bn3.weight <class 'torch.nn.parameter.Parameter'> torch.Size([256])
    layer3.13.bn3.bias <class 'torch.nn.parameter.Parameter'> torch.Size([256])
    layer3.14.bn1.weight <class 'torch.nn.parameter.Parameter'> torch.Size([256])
    layer3.14.bn1.bias <class 'torch.nn.parameter.Parameter'> torch.Size([256])
    layer3.14.conv1.weight <class 'torch.nn.parameter.Parameter'> torch.Size([256, 256, 3, 3])
    layer3.14.bn2.weight <class 'torch.nn.parameter.Parameter'> torch.Size([256])
    layer3.14.bn2.bias <class 'torch.nn.parameter.Parameter'> torch.Size([256])
    layer3.14.prelu.weight <class 'torch.nn.parameter.Parameter'> torch.Size([256])
    layer3.14.conv2.weight <class 'torch.nn.parameter.Parameter'> torch.Size([256, 256, 3, 3])
    layer3.14.bn3.weight <class 'torch.nn.parameter.Parameter'> torch.Size([256])
    layer3.14.bn3.bias <class 'torch.nn.parameter.Parameter'> torch.Size([256])
    layer3.15.bn1.weight <class 'torch.nn.parameter.Parameter'> torch.Size([256])
    layer3.15.bn1.bias <class 'torch.nn.parameter.Parameter'> torch.Size([256])
    layer3.15.conv1.weight <class 'torch.nn.parameter.Parameter'> torch.Size([256, 256, 3, 3])
    layer3.15.bn2.weight <class 'torch.nn.parameter.Parameter'> torch.Size([256])
    layer3.15.bn2.bias <class 'torch.nn.parameter.Parameter'> torch.Size([256])
    layer3.15.prelu.weight <class 'torch.nn.parameter.Parameter'> torch.Size([256])
    layer3.15.conv2.weight <class 'torch.nn.parameter.Parameter'> torch.Size([256, 256, 3, 3])
    layer3.15.bn3.weight <class 'torch.nn.parameter.Parameter'> torch.Size([256])
    layer3.15.bn3.bias <class 'torch.nn.parameter.Parameter'> torch.Size([256])
    layer3.16.bn1.weight <class 'torch.nn.parameter.Parameter'> torch.Size([256])
    layer3.16.bn1.bias <class 'torch.nn.parameter.Parameter'> torch.Size([256])
    layer3.16.conv1.weight <class 'torch.nn.parameter.Parameter'> torch.Size([256, 256, 3, 3])
    layer3.16.bn2.weight <class 'torch.nn.parameter.Parameter'> torch.Size([256])
    layer3.16.bn2.bias <class 'torch.nn.parameter.Parameter'> torch.Size([256])
    layer3.16.prelu.weight <class 'torch.nn.parameter.Parameter'> torch.Size([256])
    layer3.16.conv2.weight <class 'torch.nn.parameter.Parameter'> torch.Size([256, 256, 3, 3])
    layer3.16.bn3.weight <class 'torch.nn.parameter.Parameter'> torch.Size([256])
    layer3.16.bn3.bias <class 'torch.nn.parameter.Parameter'> torch.Size([256])
    layer3.17.bn1.weight <class 'torch.nn.parameter.Parameter'> torch.Size([256])
    layer3.17.bn1.bias <class 'torch.nn.parameter.Parameter'> torch.Size([256])
    layer3.17.conv1.weight <class 'torch.nn.parameter.Parameter'> torch.Size([256, 256, 3, 3])
    layer3.17.bn2.weight <class 'torch.nn.parameter.Parameter'> torch.Size([256])
    layer3.17.bn2.bias <class 'torch.nn.parameter.Parameter'> torch.Size([256])
    layer3.17.prelu.weight <class 'torch.nn.parameter.Parameter'> torch.Size([256])
    layer3.17.conv2.weight <class 'torch.nn.parameter.Parameter'> torch.Size([256, 256, 3, 3])
    layer3.17.bn3.weight <class 'torch.nn.parameter.Parameter'> torch.Size([256])
    layer3.17.bn3.bias <class 'torch.nn.parameter.Parameter'> torch.Size([256])
    layer3.18.bn1.weight <class 'torch.nn.parameter.Parameter'> torch.Size([256])
    layer3.18.bn1.bias <class 'torch.nn.parameter.Parameter'> torch.Size([256])
    layer3.18.conv1.weight <class 'torch.nn.parameter.Parameter'> torch.Size([256, 256, 3, 3])
    layer3.18.bn2.weight <class 'torch.nn.parameter.Parameter'> torch.Size([256])
    layer3.18.bn2.bias <class 'torch.nn.parameter.Parameter'> torch.Size([256])
    layer3.18.prelu.weight <class 'torch.nn.parameter.Parameter'> torch.Size([256])
    layer3.18.conv2.weight <class 'torch.nn.parameter.Parameter'> torch.Size([256, 256, 3, 3])
    layer3.18.bn3.weight <class 'torch.nn.parameter.Parameter'> torch.Size([256])
    layer3.18.bn3.bias <class 'torch.nn.parameter.Parameter'> torch.Size([256])
    layer3.19.bn1.weight <class 'torch.nn.parameter.Parameter'> torch.Size([256])
    layer3.19.bn1.bias <class 'torch.nn.parameter.Parameter'> torch.Size([256])
    layer3.19.conv1.weight <class 'torch.nn.parameter.Parameter'> torch.Size([256, 256, 3, 3])
    layer3.19.bn2.weight <class 'torch.nn.parameter.Parameter'> torch.Size([256])
    layer3.19.bn2.bias <class 'torch.nn.parameter.Parameter'> torch.Size([256])
    layer3.19.prelu.weight <class 'torch.nn.parameter.Parameter'> torch.Size([256])
    layer3.19.conv2.weight <class 'torch.nn.parameter.Parameter'> torch.Size([256, 256, 3, 3])
    layer3.19.bn3.weight <class 'torch.nn.parameter.Parameter'> torch.Size([256])
    layer3.19.bn3.bias <class 'torch.nn.parameter.Parameter'> torch.Size([256])
    layer3.20.bn1.weight <class 'torch.nn.parameter.Parameter'> torch.Size([256])
    layer3.20.bn1.bias <class 'torch.nn.parameter.Parameter'> torch.Size([256])
    layer3.20.conv1.weight <class 'torch.nn.parameter.Parameter'> torch.Size([256, 256, 3, 3])
    layer3.20.bn2.weight <class 'torch.nn.parameter.Parameter'> torch.Size([256])
    layer3.20.bn2.bias <class 'torch.nn.parameter.Parameter'> torch.Size([256])
    layer3.20.prelu.weight <class 'torch.nn.parameter.Parameter'> torch.Size([256])
    layer3.20.conv2.weight <class 'torch.nn.parameter.Parameter'> torch.Size([256, 256, 3, 3])
    layer3.20.bn3.weight <class 'torch.nn.parameter.Parameter'> torch.Size([256])
    layer3.20.bn3.bias <class 'torch.nn.parameter.Parameter'> torch.Size([256])
    layer3.21.bn1.weight <class 'torch.nn.parameter.Parameter'> torch.Size([256])
    layer3.21.bn1.bias <class 'torch.nn.parameter.Parameter'> torch.Size([256])
    layer3.21.conv1.weight <class 'torch.nn.parameter.Parameter'> torch.Size([256, 256, 3, 3])
    layer3.21.bn2.weight <class 'torch.nn.parameter.Parameter'> torch.Size([256])
    layer3.21.bn2.bias <class 'torch.nn.parameter.Parameter'> torch.Size([256])
    layer3.21.prelu.weight <class 'torch.nn.parameter.Parameter'> torch.Size([256])
    layer3.21.conv2.weight <class 'torch.nn.parameter.Parameter'> torch.Size([256, 256, 3, 3])
    layer3.21.bn3.weight <class 'torch.nn.parameter.Parameter'> torch.Size([256])
    layer3.21.bn3.bias <class 'torch.nn.parameter.Parameter'> torch.Size([256])
    layer3.22.bn1.weight <class 'torch.nn.parameter.Parameter'> torch.Size([256])
    layer3.22.bn1.bias <class 'torch.nn.parameter.Parameter'> torch.Size([256])
    layer3.22.conv1.weight <class 'torch.nn.parameter.Parameter'> torch.Size([256, 256, 3, 3])
    layer3.22.bn2.weight <class 'torch.nn.parameter.Parameter'> torch.Size([256])
    layer3.22.bn2.bias <class 'torch.nn.parameter.Parameter'> torch.Size([256])
    layer3.22.prelu.weight <class 'torch.nn.parameter.Parameter'> torch.Size([256])
    layer3.22.conv2.weight <class 'torch.nn.parameter.Parameter'> torch.Size([256, 256, 3, 3])
    layer3.22.bn3.weight <class 'torch.nn.parameter.Parameter'> torch.Size([256])
    layer3.22.bn3.bias <class 'torch.nn.parameter.Parameter'> torch.Size([256])
    layer3.23.bn1.weight <class 'torch.nn.parameter.Parameter'> torch.Size([256])
    layer3.23.bn1.bias <class 'torch.nn.parameter.Parameter'> torch.Size([256])
    layer3.23.conv1.weight <class 'torch.nn.parameter.Parameter'> torch.Size([256, 256, 3, 3])
    layer3.23.bn2.weight <class 'torch.nn.parameter.Parameter'> torch.Size([256])
    layer3.23.bn2.bias <class 'torch.nn.parameter.Parameter'> torch.Size([256])
    layer3.23.prelu.weight <class 'torch.nn.parameter.Parameter'> torch.Size([256])
    layer3.23.conv2.weight <class 'torch.nn.parameter.Parameter'> torch.Size([256, 256, 3, 3])
    layer3.23.bn3.weight <class 'torch.nn.parameter.Parameter'> torch.Size([256])
    layer3.23.bn3.bias <class 'torch.nn.parameter.Parameter'> torch.Size([256])
    layer3.24.bn1.weight <class 'torch.nn.parameter.Parameter'> torch.Size([256])
    layer3.24.bn1.bias <class 'torch.nn.parameter.Parameter'> torch.Size([256])
    layer3.24.conv1.weight <class 'torch.nn.parameter.Parameter'> torch.Size([256, 256, 3, 3])
    layer3.24.bn2.weight <class 'torch.nn.parameter.Parameter'> torch.Size([256])
    layer3.24.bn2.bias <class 'torch.nn.parameter.Parameter'> torch.Size([256])
    layer3.24.prelu.weight <class 'torch.nn.parameter.Parameter'> torch.Size([256])
    layer3.24.conv2.weight <class 'torch.nn.parameter.Parameter'> torch.Size([256, 256, 3, 3])
    layer3.24.bn3.weight <class 'torch.nn.parameter.Parameter'> torch.Size([256])
    layer3.24.bn3.bias <class 'torch.nn.parameter.Parameter'> torch.Size([256])
    layer3.25.bn1.weight <class 'torch.nn.parameter.Parameter'> torch.Size([256])
    layer3.25.bn1.bias <class 'torch.nn.parameter.Parameter'> torch.Size([256])
    layer3.25.conv1.weight <class 'torch.nn.parameter.Parameter'> torch.Size([256, 256, 3, 3])
    layer3.25.bn2.weight <class 'torch.nn.parameter.Parameter'> torch.Size([256])
    layer3.25.bn2.bias <class 'torch.nn.parameter.Parameter'> torch.Size([256])
    layer3.25.prelu.weight <class 'torch.nn.parameter.Parameter'> torch.Size([256])
    layer3.25.conv2.weight <class 'torch.nn.parameter.Parameter'> torch.Size([256, 256, 3, 3])
    layer3.25.bn3.weight <class 'torch.nn.parameter.Parameter'> torch.Size([256])
    layer3.25.bn3.bias <class 'torch.nn.parameter.Parameter'> torch.Size([256])
    layer3.26.bn1.weight <class 'torch.nn.parameter.Parameter'> torch.Size([256])
    layer3.26.bn1.bias <class 'torch.nn.parameter.Parameter'> torch.Size([256])
    layer3.26.conv1.weight <class 'torch.nn.parameter.Parameter'> torch.Size([256, 256, 3, 3])
    layer3.26.bn2.weight <class 'torch.nn.parameter.Parameter'> torch.Size([256])
    layer3.26.bn2.bias <class 'torch.nn.parameter.Parameter'> torch.Size([256])
    layer3.26.prelu.weight <class 'torch.nn.parameter.Parameter'> torch.Size([256])
    layer3.26.conv2.weight <class 'torch.nn.parameter.Parameter'> torch.Size([256, 256, 3, 3])
    layer3.26.bn3.weight <class 'torch.nn.parameter.Parameter'> torch.Size([256])
    layer3.26.bn3.bias <class 'torch.nn.parameter.Parameter'> torch.Size([256])
    layer3.27.bn1.weight <class 'torch.nn.parameter.Parameter'> torch.Size([256])
    layer3.27.bn1.bias <class 'torch.nn.parameter.Parameter'> torch.Size([256])
    layer3.27.conv1.weight <class 'torch.nn.parameter.Parameter'> torch.Size([256, 256, 3, 3])
    layer3.27.bn2.weight <class 'torch.nn.parameter.Parameter'> torch.Size([256])
    layer3.27.bn2.bias <class 'torch.nn.parameter.Parameter'> torch.Size([256])
    layer3.27.prelu.weight <class 'torch.nn.parameter.Parameter'> torch.Size([256])
    layer3.27.conv2.weight <class 'torch.nn.parameter.Parameter'> torch.Size([256, 256, 3, 3])
    layer3.27.bn3.weight <class 'torch.nn.parameter.Parameter'> torch.Size([256])
    layer3.27.bn3.bias <class 'torch.nn.parameter.Parameter'> torch.Size([256])
    layer3.28.bn1.weight <class 'torch.nn.parameter.Parameter'> torch.Size([256])
    layer3.28.bn1.bias <class 'torch.nn.parameter.Parameter'> torch.Size([256])
    layer3.28.conv1.weight <class 'torch.nn.parameter.Parameter'> torch.Size([256, 256, 3, 3])
    layer3.28.bn2.weight <class 'torch.nn.parameter.Parameter'> torch.Size([256])
    layer3.28.bn2.bias <class 'torch.nn.parameter.Parameter'> torch.Size([256])
    layer3.28.prelu.weight <class 'torch.nn.parameter.Parameter'> torch.Size([256])
    layer3.28.conv2.weight <class 'torch.nn.parameter.Parameter'> torch.Size([256, 256, 3, 3])
    layer3.28.bn3.weight <class 'torch.nn.parameter.Parameter'> torch.Size([256])
    layer3.28.bn3.bias <class 'torch.nn.parameter.Parameter'> torch.Size([256])
    layer3.29.bn1.weight <class 'torch.nn.parameter.Parameter'> torch.Size([256])
    layer3.29.bn1.bias <class 'torch.nn.parameter.Parameter'> torch.Size([256])
    layer3.29.conv1.weight <class 'torch.nn.parameter.Parameter'> torch.Size([256, 256, 3, 3])
    layer3.29.bn2.weight <class 'torch.nn.parameter.Parameter'> torch.Size([256])
    layer3.29.bn2.bias <class 'torch.nn.parameter.Parameter'> torch.Size([256])
    layer3.29.prelu.weight <class 'torch.nn.parameter.Parameter'> torch.Size([256])
    layer3.29.conv2.weight <class 'torch.nn.parameter.Parameter'> torch.Size([256, 256, 3, 3])
    layer3.29.bn3.weight <class 'torch.nn.parameter.Parameter'> torch.Size([256])
    layer3.29.bn3.bias <class 'torch.nn.parameter.Parameter'> torch.Size([256])
    layer4.0.bn1.weight <class 'torch.nn.parameter.Parameter'> torch.Size([256])
    layer4.0.bn1.bias <class 'torch.nn.parameter.Parameter'> torch.Size([256])
    layer4.0.conv1.weight <class 'torch.nn.parameter.Parameter'> torch.Size([512, 256, 3, 3])
    layer4.0.bn2.weight <class 'torch.nn.parameter.Parameter'> torch.Size([512])
    layer4.0.bn2.bias <class 'torch.nn.parameter.Parameter'> torch.Size([512])
    layer4.0.prelu.weight <class 'torch.nn.parameter.Parameter'> torch.Size([512])
    layer4.0.conv2.weight <class 'torch.nn.parameter.Parameter'> torch.Size([512, 512, 3, 3])
    layer4.0.bn3.weight <class 'torch.nn.parameter.Parameter'> torch.Size([512])
    layer4.0.bn3.bias <class 'torch.nn.parameter.Parameter'> torch.Size([512])
    layer4.0.downsample.0.weight <class 'torch.nn.parameter.Parameter'> torch.Size([512, 256, 1, 1])
    layer4.0.downsample.1.weight <class 'torch.nn.parameter.Parameter'> torch.Size([512])
    layer4.0.downsample.1.bias <class 'torch.nn.parameter.Parameter'> torch.Size([512])
    layer4.1.bn1.weight <class 'torch.nn.parameter.Parameter'> torch.Size([512])
    layer4.1.bn1.bias <class 'torch.nn.parameter.Parameter'> torch.Size([512])
    layer4.1.conv1.weight <class 'torch.nn.parameter.Parameter'> torch.Size([512, 512, 3, 3])
    layer4.1.bn2.weight <class 'torch.nn.parameter.Parameter'> torch.Size([512])
    layer4.1.bn2.bias <class 'torch.nn.parameter.Parameter'> torch.Size([512])
    layer4.1.prelu.weight <class 'torch.nn.parameter.Parameter'> torch.Size([512])
    layer4.1.conv2.weight <class 'torch.nn.parameter.Parameter'> torch.Size([512, 512, 3, 3])
    layer4.1.bn3.weight <class 'torch.nn.parameter.Parameter'> torch.Size([512])
    layer4.1.bn3.bias <class 'torch.nn.parameter.Parameter'> torch.Size([512])
    layer4.2.bn1.weight <class 'torch.nn.parameter.Parameter'> torch.Size([512])
    layer4.2.bn1.bias <class 'torch.nn.parameter.Parameter'> torch.Size([512])
    layer4.2.conv1.weight <class 'torch.nn.parameter.Parameter'> torch.Size([512, 512, 3, 3])
    layer4.2.bn2.weight <class 'torch.nn.parameter.Parameter'> torch.Size([512])
    layer4.2.bn2.bias <class 'torch.nn.parameter.Parameter'> torch.Size([512])
    layer4.2.prelu.weight <class 'torch.nn.parameter.Parameter'> torch.Size([512])
    layer4.2.conv2.weight <class 'torch.nn.parameter.Parameter'> torch.Size([512, 512, 3, 3])
    layer4.2.bn3.weight <class 'torch.nn.parameter.Parameter'> torch.Size([512])
    layer4.2.bn3.bias <class 'torch.nn.parameter.Parameter'> torch.Size([512])
    bn2.weight <class 'torch.nn.parameter.Parameter'> torch.Size([512])
    bn2.bias <class 'torch.nn.parameter.Parameter'> torch.Size([512])
    fc.weight <class 'torch.nn.parameter.Parameter'> torch.Size([512, 25088])
    fc.bias <class 'torch.nn.parameter.Parameter'> torch.Size([512])
    features.weight <class 'torch.nn.parameter.Parameter'> torch.Size([512])
    features.bias <class 'torch.nn.parameter.Parameter'> torch.Size([512])
-------------
self.nfc.faceClassifier.named_parameters()
    weight <class 'torch.nn.parameter.Parameter'> torch.Size([531, 531])
    fc1.weight <class 'torch.nn.parameter.Parameter'> torch.Size([512, 300])
    fc1.bias <class 'torch.nn.parameter.Parameter'> torch.Size([512])
    fc2.weight <class 'torch.nn.parameter.Parameter'> torch.Size([1024, 512])
    fc2.bias <class 'torch.nn.parameter.Parameter'> torch.Size([1024])
    fc3.weight <class 'torch.nn.parameter.Parameter'> torch.Size([531, 1024])
    fc3.bias <class 'torch.nn.parameter.Parameter'> torch.Size([531])
    fc4.weight <class 'torch.nn.parameter.Parameter'> torch.Size([531, 531])
    fc4.bias <class 'torch.nn.parameter.Parameter'> torch.Size([531])
    norm_fc1.weight <class 'torch.nn.parameter.Parameter'> torch.Size([512])
    norm_fc1.bias <class 'torch.nn.parameter.Parameter'> torch.Size([512])
    norm_fc2.weight <class 'torch.nn.parameter.Parameter'> torch.Size([1024])
    norm_fc2.bias <class 'torch.nn.parameter.Parameter'> torch.Size([1024])
    norm_fc3.weight <class 'torch.nn.parameter.Parameter'> torch.Size([531])
    norm_fc3.bias <class 'torch.nn.parameter.Parameter'> torch.Size([531])
-------------
